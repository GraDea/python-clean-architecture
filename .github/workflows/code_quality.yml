name: Code Quality

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Dependencies
        run: pip install black flake8 isort
      - name: Run linters
        run: |
          flake8 .
          black . --check
          isort . -c

  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - 'pypy3'
        include:
          # - os: windows-latest
          #   python-version: 3.8
          - os: macos-latest
            python-version: 3.8
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1.1.4
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      uses: actions/cache@v2
      id: cached-poetry-dependencies
      if: startsWith(runner.os, 'Linux')
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: poetry install --no-interaction
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    - name: Run tests
      run: poetry run pytest --cov=<project-dir> --cov-report=xml
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
